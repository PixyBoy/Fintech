version: '3.9'

services:
  mysql:
    image: ${MYSQL_IMAGE:-mysql:8.0}
    container_name: ${MYSQL_CONTAINER_NAME:-mysql}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - ${MYSQL_DATA_VOLUME:-mysql-data}:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${MYSQL_ROOT_USER:-root} -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  phpmyadmin:
    image: ${PHPMYADMIN_IMAGE:-phpmyadmin/phpmyadmin}
    container_name: ${PHPMYADMIN_CONTAINER_NAME:-phpmyadmin}
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    environment:
      PMA_HOST: ${MYSQL_HOST:-mysql}
      PMA_USER: ${MYSQL_ROOT_USER:-root}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${TZ}
    depends_on:
      mysql:
        condition: service_healthy

  redis:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    container_name: ${REDIS_CONTAINER_NAME:-redis}
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ${REDIS_DATA_VOLUME:-redis-data}:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  php-fpm:
    build:
      context: .
      dockerfile: ${PHP_DOCKERFILE:-docker/php/Dockerfile}
      args:
        PUID: ${PUID:-1000}
        PGID: ${PGID:-1000}
        TZ: ${TZ}
    image: ${PHP_IMAGE:-laravel-php:8.4}
    container_name: ${PHPFPM_CONTAINER_NAME:-php-fpm}
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      APP_ENV: ${APP_ENV:-local}
      TZ: ${TZ}
    volumes:
      - ./src:/var/www/html
      - ${VENDOR_VOLUME:-vendor}:/var/www/html/vendor
      - ${STORAGE_VOLUME:-storage}:/var/www/html/storage
      - ${COMPOSER_CACHE_VOLUME:-composer-cache}:/tmp/composer
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    expose:
      - "9000"
    healthcheck:
      test: ["CMD-SHELL", "php -v >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

  apache:
    build:
      context: .
      dockerfile: ${APACHE_DOCKERFILE:-docker/apache/Dockerfile}
      args:
        TZ: ${TZ}
    container_name: ${APACHE_CONTAINER_NAME:-apache}
    restart: unless-stopped
    ports:
      - "${APACHE_PORT:-80}:80"
    volumes:
      - ./src:/var/www/html
      - ${APACHE_VHOST_CONF:-./docker/apache/vhost.conf}:/etc/apache2/sites-available/000-default.conf:ro
    depends_on:
      php-fpm:
        condition: service_healthy

  horizon:
    image: ${PHP_IMAGE:-laravel-php:8.4}
    container_name: ${HORIZON_CONTAINER_NAME:-horizon}
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - ./src/.env
    environment:
      APP_ENV: ${APP_ENV:-local}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION:-redis}
      REDIS_HOST: ${REDIS_HOST:-redis}
      TZ: ${TZ}
    volumes:
      - ./src:/var/www/html
      - ${VENDOR_VOLUME:-vendor}:/var/www/html/vendor
      - ${STORAGE_VOLUME:-storage}:/var/www/html/storage
      - ${COMPOSER_CACHE_VOLUME:-composer-cache}:/tmp/composer
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["php", "artisan", "horizon"]
    healthcheck:
      test: ["CMD", "php", "artisan", "horizon:status"]
      interval: 10s
      timeout: 5s
      retries: 3
  node:
    image: node:20
    working_dir: /var/www/html
    ports:
    - "5173:5173"
    volumes:
      - ./src:/var/www/html
    command: sh -c "npm install && npm run dev"
volumes:
  mysql-data:
  redis-data:
  vendor:
  storage:
  composer-cache:
